#!/usr/bin/python
import stencil.plot as plt
import stencil.rio as rio
import  stencil.parse as parse 
from  stencil.paint import paintit
import os

# read arguments for PlotOverlay Constructor
parser = parse.ConstructorParser(plt.PlotOverlay)
parser.add_argument("filename", type=str)
parser.add_argument("--objname", type=str)
parser.add_argument("--outfile", type=str, default = "")
parser.add_argument("--draw_opt", type=str, default = "")

contr_d, other_d = parser.parse_args()


# Do extension specific manip
outfile = other_d["outfile"]
filename = other_d["filename"]
objname = other_d["objname"]
draw_opt = other_d["draw_opt"]

if outfile == "":
    outfile = "can_" + filename

ext = os.path.splitext()[1]
contr_d, other_d, replace_dict = parse.prepare_for_ext(contr_d, other_d, 
                                                       ext)
po = plt.PlotOverlay(**contr_d)
po.add_obj(rio.grab_obj(filename, objname), "n",
           draw_opt)

can  = po.draw()
paintit(can, outfile, replace_dict)
